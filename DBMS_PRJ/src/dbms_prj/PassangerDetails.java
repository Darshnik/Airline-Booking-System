/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dbms_prj;

import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Umang
 */
public class PassangerDetails extends javax.swing.JFrame {

    /**
     * Creates new form PassangerDetails
     * @param s1
     * @param s2
     * @param s3
     */
    Connection con;
    Statement stmt;
    String S1, S2, S3, S4;
    PreparedStatement pstmt;
    
    public void connection() throws SQLException {
        DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
        con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE", "system", "illuminati");
    }
    
    public PassangerDetails(String s1, String s2, String s3, String s4) {
        initComponents();
        S1 = s1;
        S2 = s2;
        S3 = s3;
        S4 = s4;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jTextField13 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel1.setText("PASSANGER DETAILS");

        jLabel2.setText("E-Mail:");

        jLabel3.setText("City:");

        jLabel4.setText("Street Address:");

        jLabel5.setText("State:");

        jLabel6.setText("D.O.B:");

        jLabel7.setText("Last Name:");

        jLabel8.setText("Country:");

        jLabel9.setText("Zip:");

        jLabel10.setText("Phone:");

        jLabel13.setText("First Name:");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextField3.setText("dd/mm/yyyy");

        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jButton1.setText("Proceed to Pay");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel11.setIcon(new javax.swing.ImageIcon("D:\\studies\\4th sem\\DBMS\\airline booking system\\Travel partners.png")); // NOI18N
        jLabel11.setText("jLabel11");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(116, 116, 116))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(9, 9, 9)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField9, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField8, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField7, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField2)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                            .addComponent(jTextField13)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap(117, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(185, 185, 185))
            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        
    }//GEN-LAST:event_jTextField1ActionPerformed
    public void set(String s4) throws SQLException {
        connection();
        stmt = con.createStatement();
        ResultSet rs = stmt.executeQuery("SELECT * FROM SYSTEM.PASSENGER");
        while (rs.next()) {
            if (s4.equals(rs.getString(1))) {
                jTextField1.setText(rs.getString(2));
                jTextField2.setText(rs.getString(3));
                jTextField3.setText(rs.getString(4));
                jTextArea1.setText(rs.getString(5));
                jTextField6.setText(rs.getString(6));
                jTextField7.setText(rs.getString(7));
                jTextField8.setText(rs.getString(8));
                jTextField9.setText(rs.getString(9));
                jTextField13.setText(rs.getString(10));
            }
        }
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int b = 0, p = 0;
        String s1 = jTextField1.getText();
        String s2 = jTextField2.getText();
        String s3 = jTextField3.getText();
        String s4 = jTextField4.getText();
        String s5 = jTextArea1.getText();
        String s6 = jTextField6.getText();
        String s7 = jTextField7.getText();
        String s8 = jTextField8.getText();
        String s9 = jTextField9.getText();
        String s10 = jTextField13.getText();
        int var = 0;
        if (s1.length() == 0 || s2.length() == 0 || s3.length() == 0 || s4.length() == 0 || s5.length() == 0 || s6.length() == 0 || s7.length() == 0 || s8.length() == 0 || s9.length() == 0 || s10.length() == 0) {
            PopUp1.main();
        } else {
            try {
                b = book_id();
            } catch (SQLException ex) {
                Logger.getLogger(PassangerDetails.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                p = pnr();
            } catch (SQLException ex) {
                Logger.getLogger(PassangerDetails.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                var = emailid(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10);
            } catch (SQLException ex) {
                Logger.getLogger(PassangerDetails.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            if (var == 1) {
                PopUp6.main();
            } else if (var == 0) {
                try {
                    passenger(s1, s2, s3, s4, s5, s6, s7, s8, s9, s10);
                } catch (SQLException ex) {
                    Logger.getLogger(PassangerDetails.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    booking(b, s4);
                } catch (SQLException ex) {
                    Logger.getLogger(PassangerDetails.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    ticket(b, p, S2, s4, S1, S3, S4);
                } catch (SQLException ex) {
                    Logger.getLogger(PassangerDetails.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                Display.main(b, S4);
                setVisible(false);
            } else if (var == 2) {
                
                try {
                    booking(b, s4);
                } catch (SQLException ex) {
                    Logger.getLogger(PassangerDetails.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    ticket(b, p, S2, s4, S1, S3, S4);
                } catch (SQLException ex) {
                    Logger.getLogger(PassangerDetails.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                Display.main(b, S4);
                setVisible(false);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        String s4 = jTextField4.getText();
        try {
            set(s4);
        } catch (SQLException ex) {
            Logger.getLogger(PassangerDetails.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTextField4ActionPerformed

    public int book_id () throws SQLException {
        connection();
        stmt = con.createStatement();
        int b = 0;
        ResultSet rs = stmt.executeQuery("SELECT SYSTEM.SEQ_BOOK_ID.NEXTVAL FROM DUAL");
        while (rs.next()) {
            b = rs.getInt(1);
        }
        return b;
    }
    public int pnr() throws SQLException {
        connection();
        stmt = con.createStatement();
        int p = 0;
        ResultSet rs = stmt.executeQuery("SELECT SYSTEM.SEQ_PNR.NEXTVAL FROM DUAL");
        while (rs.next()) {
            p = rs.getInt(1);
        }
        return p;
    }
    
    public int emailid(String s1, String s2, String s3, String s4, String s5, String s6, String s7, String s8, String s9, String s10) throws SQLException {
        connection();
        int var = 0;
        stmt = con.createStatement();
        ResultSet rs = stmt.executeQuery("SELECT * FROM SYSTEM.PASSENGER");
        while (rs.next()) {
            if (s4.equals(rs.getString(1))) {
                if (!(s1.equals(rs.getString(2))) || !(s2.equals(rs.getString(3))) || !(s3.equals(rs.getString(4))) || !(s5.equals(rs.getString(5))) || !(s6.equals(rs.getString(6))) || !(s7.equals(rs.getString(7))) || !(s8.equals(rs.getString(8))) || !(s9.equals(rs.getString(9))) || !(s10.equals(rs.getString(10)))) {
                    var = 1;
                    break;
                } else if ((s1.equals(rs.getString(2))) && (s2.equals(rs.getString(3))) && (s3.equals(rs.getString(4))) && (s5.equals(rs.getString(5))) && (s6.equals(rs.getString(6))) && (s7.equals(rs.getString(7))) && (s8.equals(rs.getString(8))) && (s9.equals(rs.getString(9))) && (s10.equals(rs.getString(10)))) {
                    var = 2;
                    break;
                }
            }
        }
        return var;
    }
    
    public void passenger(String s1, String s2, String s3, String s4, String s5, String s6, String s7, String s8, String s9, String s10) throws SQLException {
        pstmt = con.prepareStatement("INSERT INTO SYSTEM.PASSENGER VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
        pstmt.setString(1, s4);
        pstmt.setString(2, s1);
        pstmt.setString(3, s2);
        pstmt.setString(4, s3);
        pstmt.setString(5, s5);
        pstmt.setString(6, s6);
        pstmt.setString(7, s7);
        pstmt.setString(8, s8);
        pstmt.setDouble(9, Double.parseDouble(s9));
        pstmt.setDouble(10, Double.parseDouble(s10));
        pstmt.executeUpdate();
    }
    public void booking (int b, String s4) throws SQLException {
        connection();
        pstmt = con.prepareStatement("INSERT INTO SYSTEM.BOOKING VALUES ('" + b + "', '"+ s4 +"')");
        //pstmt.setString(1, s4);
        pstmt.executeUpdate();
    }
    
    
    public void ticket (int b, int p, String s, String s4, String S, String s5, String S4) throws SQLException {
        connection();
        stmt = con.createStatement();
        String s1 = null;
        String s2 = null;
        String s3 = null;
        int i = 0, j = 0, k = 0, x = 0, y = 0, z = 0;
        ResultSet rs;
        rs = stmt.executeQuery("SELECT BUS_AVAILABLE, ECO_AVAILABLE FROM SYSTEM.AVAILABILITY WHERE FLIGHT_NO = '" + S + "' AND DATE1 = '" + S4 + "'");
        while (rs.next()) {
            i = rs.getInt(1);
            j = rs.getInt(2);
        }
        if (s.equals("Economy")) {
            if (j > 0) {
                s2 = "CNF(ECO)";
                pstmt = con.prepareStatement("INSERT INTO SYSTEM.TICKET VALUES ('" + p + "', '" + b + "','" + S + "', '"+ s2 +"')");
                pstmt.executeUpdate();
                
                rs = stmt.executeQuery("SELECT ECO_RATE FROM SYSTEM.FLIGHT WHERE FLIGHT_NO = '" + S + "'");
                while (rs.next()) {
                    x = rs.getInt(1);
                }
                if (s5.equals("Student")) {
                    x = x - 200;
                } else if (s5.equals("Senior Citizen")) {
                    x = x - 500;
                } else if (s5.equals("Working")) {
                    x = x - 300;
                }
                pstmt = con.prepareStatement("INSERT INTO SYSTEM.FARE VALUES ('" + p + "', '" + S + "','" + s + "', '"+ s5 +"', '" + x +"')");
                pstmt.executeUpdate();
                j = j - 1;
                pstmt = con.prepareStatement("UPDATE SYSTEM.AVAILABILITY SET ECO_AVAILABLE = '" + j + "' WHERE FLIGHT_NO = '" + S + "' AND DATE1 = '" + S4 + "'");
                pstmt.executeUpdate();
            } else {
                rs = stmt.executeQuery("SELECT ECO_WAITING FROM SYSTEM.STATUS WHERE FLIGHT_NO = '" + S + "' AND DATE1 = '" + S4 + "'");
                while (rs.next()) {
                    y = rs.getInt(1);
                }
                s2 = "WL(ECO)-";
                String s7 = Integer.toString(y);
                s2 = s2 + s7;
                pstmt = con.prepareStatement("INSERT INTO SYSTEM.TICKET VALUES ('" + p + "', '" + b + "','" + S + "', '"+ s2 +"')");
                pstmt.executeUpdate();
                
                rs = stmt.executeQuery("SELECT ECO_RATE FROM SYSTEM.FLIGHT WHERE FLIGHT_NO = '" + S + "' AND DATE1 = '" + S4 + "'");
                while (rs.next()) {
                    x = rs.getInt(1);
                }
                if (s5.equals("Student")) {
                    x = x - 200;
                } else if (s5.equals("Senior Citizen")) {
                    x = x - 500;
                } else if (s5.equals("Working")) {
                    x = x - 300;
                }
                
                pstmt = con.prepareStatement("INSERT INTO SYSTEM.FARE VALUES ('" + p + "', '" + S + "','" + s + "', '"+ s5 +"', '" + x +"')");
                pstmt.executeUpdate();
                rs = stmt.executeQuery("SELECT ECO_WAITING FROM SYSTEM.STATUS WHERE FLIGHT_NO = '" + S + "' AND DATE1 = '" + S4 + "'");
                while (rs.next()) {
                    z = rs.getInt(1);
                }
                z = z + 1;
                pstmt = con.prepareStatement("UPDATE SYSTEM.STATUS SET ECO_WAITING = '" + z + "' WHERE FLIGHT_NO = '" + S + "' AND DATE1 = '" + S4 + "'");
                pstmt.executeUpdate();
            }
        } else if (s.equals("Business")) {
            if (i > 0) {
                s2 = "CNF(BUS)";
                pstmt = con.prepareStatement("INSERT INTO SYSTEM.TICKET VALUES ('" + p + "', '" + b + "', '" + S + "', '"+ s2 +"')");
                pstmt.executeUpdate();
                
                rs = stmt.executeQuery("SELECT BUS_RATE FROM SYSTEM.FLIGHT WHERE FLIGHT_NO = '" + S + "'");
                while (rs.next()) {
                    x = rs.getInt(1);
                }
                if (s5.equals("Student")) {
                    x = x - 200;
                } else if (s5.equals("Senior Citizen")) {
                    x = x - 500;
                } else if (s5.equals("Working")) {
                    x = x - 300;
                }
                pstmt = con.prepareStatement("INSERT INTO SYSTEM.FARE VALUES ('" + p + "', '" + S + "', '" + s + "', '"+ s5 +"', '" + x +"')");
                pstmt.executeUpdate();
                i = i - 1;
                pstmt = con.prepareStatement("UPDATE SYSTEM.AVAILABILITY SET BUS_AVAILABLE = '" + i + "' WHERE FLIGHT_NO = '" + S + "' AND DATE1 = '" + S4 + "'");
                pstmt.executeUpdate();              
            } else {
                rs = stmt.executeQuery("SELECT BUS_WAITING FROM SYSTEM.STATUS WHERE FLIGHT_NO = '" + S + "' AND DATE1 = '" + S4 + "'");
                while (rs.next()) {
                    y = rs.getInt(1);
                }
                s2 = "WL(BUS)";
                String s7 = Integer.toString(y);
                s2 = s2 + s7;
                pstmt = con.prepareStatement("INSERT INTO SYSTEM.TICKET VALUES ('" + p + "', '" + b + "','" + S + "', '"+ s2 +"')");
                pstmt.executeUpdate();
                
                rs = stmt.executeQuery("SELECT BUS_RATE FROM SYSTEM.FLIGHT WHERE FLIGHT_NO = '" + S + "'");
                while (rs.next()) {
                    x = rs.getInt(1);
                }
                if (s5.equals("Student")) {
                    x = x - 200;
                } else if (s5.equals("Senior Citizen")) {
                    x = x - 500;
                } else if (s5.equals("Working")) {
                    x = x - 300;
                }
                
                pstmt = con.prepareStatement("INSERT INTO SYSTEM.FARE VALUES ('" + p + "', '" + S + "','" + s + "', '"+ s5 +"', '" + x +"')");
                pstmt.executeUpdate();
                rs = stmt.executeQuery("SELECT BUS_WAITING FROM SYSTEM.STATUS WHERE FLIGHT_NO = '" + S + "' AND DATE1 = '" + S4 + "'");
                while (rs.next()) {
                    z = rs.getInt(1);
                }
                z = z + 1;
                pstmt = con.prepareStatement("UPDATE SYSTEM.STATUS SET BUS_WAITING = '" + z + "' WHERE FLIGHT_NO = '" + S + "' AND DATE1 = '" + S4 + "'");
                pstmt.executeUpdate();
            }
        }
    }
    /**
     * @param s1
     * @param s3
     * @param s2
     */
    public static void main(final String s1, final String s2, final String s3, final String s4) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PassangerDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PassangerDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PassangerDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PassangerDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new PassangerDetails(s1, s2, s3, s4).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
